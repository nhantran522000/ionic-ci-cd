name: Build Ionic Android APK

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli @capacitor/cli

      - name: Configure Ionic to use pnpm
        run: |
          ionic config set -g npmClient pnpm
          ionic config set -g useProxyVars false

      - name: Build Ionic App
        run: ionic build --prod

      - name: Check build output
        run: |
          echo "Checking if www directory exists..."
          ls -la
          if [ -d "www" ]; then
            echo "www directory found:"
            ls -la www/
          else
            echo "www directory not found!"
            exit 1
          fi

      - name: Add Android Platform (if not exists)
        run: |
          if [ ! -d "android" ]; then
            echo "Installing Capacitor Android package..."
            pnpm add @capacitor/android@7.2.0
            echo "Adding Android platform..."
            npx cap add android
          else
            echo "Android platform already exists"
          fi

      - name: Sync Android Platform
        run: npx cap sync android

      - name: Build Android APK
        run: |
          echo "Checking android directory structure..."
          ls -la android/
          echo "Making gradlew executable..."
          chmod +x android/gradlew
          echo "Building APK..."
          cd android
          ./gradlew assembleDebug
          echo "Checking build outputs..."
          find . -name "*.apk" -type f

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ionic-android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: Upload Build Logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            android/app/build/outputs/logs/
            android/build/outputs/logs/
          retention-days: 7
